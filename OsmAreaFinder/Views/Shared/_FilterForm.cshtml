@model OsmAreaFinder.Models.Filter

@using (Html.BeginForm("Index", "Home", FormMethod.Post))
{

    <div class="form-group">
        @Html.LabelFor(m => m.ObjectType)
        @Html.DropDownListFor(m => m.ObjectType, new SelectList(OsmAreaFinder.Models.PoiList.Poi), new { @class = "form-control", @id = "in-objtype" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.MinMaxType)
        @Html.DropDownListFor(m => m.MinMaxType, new SelectList(OsmAreaFinder.Models.MinMaxList.MinMax), new { @class = "form-control", @id = "in-minmaxtype" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Distance)
        @Html.TextBoxFor(m => m.Distance, new { @class = "form-control", @id = "in-distance" })
    </div>
    <div class="form-group">
        <button type="button" class="btn btn-custom btn-lg btn-block" id="btn-add-filter" onclick="addFilter()">Dodaj</button>
        <button type="button" class="btn btn-custom btn-lg btn-block" id="draw-polygon" 
                onclick="drawPolygon([[18.638306,54.372158],[18.138306,54.372158],[18.0,54.182158],[18.138306,54.072158],[18.638306,54.072158]])">Rysuj</button>
    </div>
}

<script>
    function drawPolygon(values) {
        var polygon = new ol.geom.Polygon([values]);
        polygon.transform('EPSG:4326', 'EPSG:3857');
        var feature = new ol.Feature(polygon);
        var vectorSource = new ol.source.Vector();
        vectorSource.addFeature(feature); var vectorLayer = new ol.layer.Vector({
            source: vectorSource
        });
        map.addLayer(vectorLayer);
    }
</script>


